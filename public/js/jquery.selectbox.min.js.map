{"version":3,"sources":["jquery.selectbox.min.js"],"names":[],"mappingsfile":"jquery.selectbox.min.js","sourcesContent":["/*\n * jQuery Selectbox plugin 0.2\n *\n * Copyright 2011-2012, Dimitar Ivanov (http://www.bulgaria-web-developers.com/projects/javascript/selectbox/)\n * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.\n * \n * Date: Tue Jul 17 19:58:36 2012 +0300\n */\n(function($, undefined) {\n  var PROP_NAME = \"selectbox\",\n    FALSE = false,\n    TRUE = true;\n\n  function Selectbox() {\n    this._state = [];\n    this._defaults = {\n      classHolder: \"sbHolder\",\n      classHolderDisabled: \"sbHolderDisabled\",\n      classSelector: \"sbSelector\",\n      classOptions: \"sbOptions\",\n      classGroup: \"sbGroup\",\n      classSub: \"sbSub\",\n      classDisabled: \"sbDisabled\",\n      classToggleOpen: \"sbToggleOpen\",\n      classToggle: \"sbToggle\",\n      classFocus: \"sbFocus\",\n      speed: 200,\n      effect: \"slide\",\n      onChange: null,\n      onOpen: null,\n      onClose: null\n    }\n  }\n  $.extend(Selectbox.prototype, {\n    _isOpenSelectbox: function(target) {\n      if (!target) {\n        return FALSE\n      }\n      var inst = this._getInst(target);\n      return inst.isOpen\n    },\n    _isDisabledSelectbox: function(target) {\n      if (!target) {\n        return FALSE\n      }\n      var inst = this._getInst(target);\n      return inst.isDisabled\n    },\n    _attachSelectbox: function(target, settings) {\n      if (this._getInst(target)) {\n        return FALSE\n      }\n      var $target = $(target),\n        self = this,\n        inst = self._newInst($target),\n        sbHolder, sbSelector, sbToggle, sbOptions, s = FALSE,\n        optGroup = $target.find(\"optgroup\"),\n        opts = $target.find(\"option\"),\n        olen = opts.length;\n      $target.attr(\"sb\", inst.uid);\n      $.extend(inst.settings, self._defaults, settings);\n      self._state[inst.uid] = FALSE;\n      $target.hide();\n\n      function closeOthers() {\n        var key, sel, uid = this.attr(\"id\").split(\"_\")[1];\n        for (key in self._state) {\n          if (key !== uid) {\n            if (self._state.hasOwnProperty(key)) {\n              sel = $(\"select[sb='\" + key + \"']\")[0];\n              if (sel) {\n                self._closeSelectbox(sel)\n              }\n            }\n          }\n        }\n      }\n      sbHolder = $(\"<div>\", {\n        id: \"sbHolder_\" + inst.uid,\n        \"class\": inst.settings.classHolder,\n        tabindex: $target.attr(\"tabindex\")\n      });\n      sbSelector = $(\"<a>\", {\n        id: \"sbSelector_\" + inst.uid,\n        href: \"#\",\n        \"class\": inst.settings.classSelector,\n        click: function(e) {\n          e.preventDefault();\n          closeOthers.apply($(this), []);\n          var uid = $(this).attr(\"id\").split(\"_\")[1];\n          if (self._state[uid]) {\n            self._closeSelectbox(target)\n          } else {\n            self._openSelectbox(target)\n          }\n        }\n      });\n      sbToggle = $(\"<a>\", {\n        id: \"sbToggle_\" + inst.uid,\n        href: \"#\",\n        \"class\": inst.settings.classToggle,\n        click: function(e) {\n          e.preventDefault();\n          closeOthers.apply($(this), []);\n          var uid = $(this).attr(\"id\").split(\"_\")[1];\n          if (self._state[uid]) {\n            self._closeSelectbox(target)\n          } else {\n            self._openSelectbox(target)\n          }\n        }\n      });\n      sbToggle.appendTo(sbHolder);\n      sbOptions = $(\"<ul>\", {\n        id: \"sbOptions_\" + inst.uid,\n        \"class\": inst.settings.classOptions,\n        css: {\n          display: \"none\"\n        }\n      });\n      $target.children().each(function(i) {\n        var that = $(this),\n          li, config = {};\n        if (that.is(\"option\")) {\n          getOptions(that)\n        } else {\n          if (that.is(\"optgroup\")) {\n            li = $(\"<li>\");\n            $(\"<span>\", {\n              text: that.attr(\"label\")\n            }).addClass(inst.settings.classGroup).appendTo(li);\n            li.appendTo(sbOptions);\n            if (that.is(\":disabled\")) {\n              config.disabled = true\n            }\n            config.sub = true;\n            getOptions(that.find(\"option\"), config)\n          }\n        }\n      });\n\n      function getOptions() {\n        var sub = arguments[1] && arguments[1].sub ? true : false,\n          disabled = arguments[1] && arguments[1].disabled ? true : false;\n        arguments[0].each(function(i) {\n          var that = $(this),\n            li = $(\"<li>\"),\n            child;\n          if (that.is(\":selected\")) {\n            sbSelector.text(that.text());\n            s = TRUE\n          }\n          if (i === olen - 1) {\n            li.addClass(\"last\")\n          }\n          if (!that.is(\":disabled\") && !disabled) {\n            child = $(\"<a>\", {\n              href: \"#\" + that.val(),\n              rel: that.val()\n            }).text(that.text()).bind(\"click.sb\", function(e) {\n              if (e && e.preventDefault) {\n                e.preventDefault()\n              }\n              var t = sbToggle,\n                $this = $(this),\n                uid = t.attr(\"id\").split(\"_\")[1];\n              self._changeSelectbox(target, $this.attr(\"rel\"), $this.text());\n              self._closeSelectbox(target)\n            }).bind(\"mouseover.sb\", function() {\n              var $this = $(this);\n              $this.parent().siblings().find(\"a\").removeClass(inst.settings.classFocus);\n              $this.addClass(inst.settings.classFocus)\n            }).bind(\"mouseout.sb\", function() {\n              $(this).removeClass(inst.settings.classFocus)\n            });\n            if (sub) {\n              child.addClass(inst.settings.classSub)\n            }\n            if (that.is(\":selected\")) {\n              child.addClass(inst.settings.classFocus)\n            }\n            child.appendTo(li)\n          } else {\n            child = $(\"<span>\", {\n              text: that.text()\n            }).addClass(inst.settings.classDisabled);\n            if (sub) {\n              child.addClass(inst.settings.classSub)\n            }\n            child.appendTo(li)\n          }\n          li.appendTo(sbOptions)\n        })\n      }\n      if (!s) {\n        sbSelector.text(opts.first().text())\n      }\n      $.data(target, PROP_NAME, inst);\n      sbHolder.data(\"uid\", inst.uid).bind(\"keydown.sb\", function(e) {\n        var key = e.charCode ? e.charCode : e.keyCode ? e.keyCode : 0,\n          $this = $(this),\n          uid = $this.data(\"uid\"),\n          inst = $this.siblings(\"select[sb='\" + uid + \"']\").data(PROP_NAME),\n          trgt = $this.siblings([\"select[sb='\", uid, \"']\"].join(\"\")).get(0),\n          $f = $this.find(\"ul\").find(\"a.\" + inst.settings.classFocus);\n        switch (key) {\n          case 37:\n          case 38:\n            if ($f.length > 0) {\n              var $next;\n              $(\"a\", $this).removeClass(inst.settings.classFocus);\n              $next = $f.parent().prevAll(\"li:has(a)\").eq(0).find(\"a\");\n              if ($next.length > 0) {\n                $next.addClass(inst.settings.classFocus).focus();\n                $(\"#sbSelector_\" + uid).text($next.text())\n              }\n            }\n            break;\n          case 39:\n          case 40:\n            var $next;\n            $(\"a\", $this).removeClass(inst.settings.classFocus);\n            if ($f.length > 0) {\n              $next = $f.parent().nextAll(\"li:has(a)\").eq(0).find(\"a\")\n            } else {\n              $next = $this.find(\"ul\").find(\"a\").eq(0)\n            }\n            if ($next.length > 0) {\n              $next.addClass(inst.settings.classFocus).focus();\n              $(\"#sbSelector_\" + uid).text($next.text())\n            }\n            break;\n          case 13:\n            if ($f.length > 0) {\n              self._changeSelectbox(trgt, $f.attr(\"rel\"), $f.text())\n            }\n            self._closeSelectbox(trgt);\n            break;\n          case 9:\n            if (trgt) {\n              var inst = self._getInst(trgt);\n              if (inst) {\n                if ($f.length > 0) {\n                  self._changeSelectbox(trgt, $f.attr(\"rel\"), $f.text())\n                }\n                self._closeSelectbox(trgt)\n              }\n            }\n            var i = parseInt($this.attr(\"tabindex\"), 10);\n            if (!e.shiftKey) {\n              i++\n            } else {\n              i--\n            }\n            $(\"*[tabindex='\" + i + \"']\").focus();\n            break;\n          case 27:\n            self._closeSelectbox(trgt);\n            break\n        }\n        e.stopPropagation();\n        return false\n      }).delegate(\"a\", \"mouseover\", function(e) {\n        $(this).addClass(inst.settings.classFocus)\n      }).delegate(\"a\", \"mouseout\", function(e) {\n        $(this).removeClass(inst.settings.classFocus)\n      });\n      sbSelector.appendTo(sbHolder);\n      sbOptions.appendTo(sbHolder);\n      sbHolder.insertAfter($target);\n      $(\"html\").on(\"mousedown\", function(e) {\n        e.stopPropagation();\n        $(\"select\").selectbox(\"close\")\n      });\n      $([\".\", inst.settings.classHolder, \", .\", inst.settings.classSelector].join(\"\")).mousedown(function(e) {\n        e.stopPropagation()\n      })\n    },\n    _detachSelectbox: function(target) {\n      var inst = this._getInst(target);\n      if (!inst) {\n        return FALSE\n      }\n      $(\"#sbHolder_\" + inst.uid).remove();\n      $.data(target, PROP_NAME, null);\n      $(target).show()\n    },\n    _changeSelectbox: function(target, value, text) {\n      var onChange, inst = this._getInst(target);\n      if (inst) {\n        onChange = this._get(inst, \"onChange\");\n        $(\"#sbSelector_\" + inst.uid).text(text)\n      }\n      value = value.replace(/\\'/g, \"\\\\'\");\n      $(target).find(\"option\").attr(\"selected\", FALSE).end().find(\"option[value='\" + value + \"']\").attr(\"selected\", TRUE);\n      if (inst && onChange) {\n        onChange.apply((inst.input ? inst.input[0] : null), [value, inst])\n      } else {\n        if (inst && inst.input) {\n          inst.input.trigger(\"change\")\n        }\n      }\n    },\n    _enableSelectbox: function(target) {\n      var inst = this._getInst(target);\n      if (!inst || !inst.isDisabled) {\n        return FALSE\n      }\n      $(\"#sbHolder_\" + inst.uid).removeClass(inst.settings.classHolderDisabled);\n      inst.isDisabled = FALSE;\n      $.data(target, PROP_NAME, inst)\n    },\n    _disableSelectbox: function(target) {\n      var inst = this._getInst(target);\n      if (!inst || inst.isDisabled) {\n        return FALSE\n      }\n      $(\"#sbHolder_\" + inst.uid).addClass(inst.settings.classHolderDisabled);\n      inst.isDisabled = TRUE;\n      $.data(target, PROP_NAME, inst)\n    },\n    _optionSelectbox: function(target, name, value) {\n      var inst = this._getInst(target);\n      if (!inst) {\n        return FALSE\n      }\n      inst[name] = value;\n      $.data(target, PROP_NAME, inst)\n    },\n    _openSelectbox: function(target) {\n      var inst = this._getInst(target);\n      if (!inst || inst.isOpen || inst.isDisabled) {\n        return\n      }\n      var el = $(\"#sbOptions_\" + inst.uid),\n        viewportHeight = parseInt($(window).height(), 10),\n        offset = $(\"#sbHolder_\" + inst.uid).offset(),\n        scrollTop = $(window).scrollTop(),\n        height = el.prev().height(),\n        diff = viewportHeight - (offset.top - scrollTop) - height / 2,\n        onOpen = this._get(inst, \"onOpen\");\n      el.css({\n        top: height + \"px\",\n        maxHeight: (diff - height) + \"px\"\n      });\n      inst.settings.effect === \"fade\" ? el.fadeIn(inst.settings.speed) : el.slideDown(inst.settings.speed);\n      $(\"#sbToggle_\" + inst.uid).addClass(inst.settings.classToggleOpen);\n      this._state[inst.uid] = TRUE;\n      inst.isOpen = TRUE;\n      if (onOpen) {\n        onOpen.apply((inst.input ? inst.input[0] : null), [inst])\n      }\n      $.data(target, PROP_NAME, inst)\n    },\n    _closeSelectbox: function(target) {\n      var inst = this._getInst(target);\n      if (!inst || !inst.isOpen) {\n        return\n      }\n      var onClose = this._get(inst, \"onClose\");\n      inst.settings.effect === \"fade\" ? $(\"#sbOptions_\" + inst.uid).fadeOut(inst.settings.speed) : $(\"#sbOptions_\" + inst.uid).slideUp(inst.settings.speed);\n      $(\"#sbToggle_\" + inst.uid).removeClass(inst.settings.classToggleOpen);\n      this._state[inst.uid] = FALSE;\n      inst.isOpen = FALSE;\n      if (onClose) {\n        onClose.apply((inst.input ? inst.input[0] : null), [inst])\n      }\n      $.data(target, PROP_NAME, inst)\n    },\n    _newInst: function(target) {\n      var id = target[0].id.replace(/([^A-Za-z0-9_-])/g, \"\\\\\\\\$1\");\n      return {\n        id: id,\n        input: target,\n        uid: Math.floor(Math.random() * 99999999),\n        isOpen: FALSE,\n        isDisabled: FALSE,\n        settings: {}\n      }\n    },\n    _getInst: function(target) {\n      try {\n        return $.data(target, PROP_NAME)\n      } catch (err) {\n        throw \"Missing instance data for this selectbox\"\n      }\n    },\n    _get: function(inst, name) {\n      return inst.settings[name] !== undefined ? inst.settings[name] : this._defaults[name]\n    }\n  });\n  $.fn.selectbox = function(options) {\n    var otherArgs = Array.prototype.slice.call(arguments, 1);\n    if (typeof options == \"string\" && options == \"isDisabled\") {\n      return $.selectbox[\"_\" + options + \"Selectbox\"].apply($.selectbox, [this[0]].concat(otherArgs))\n    }\n    if (options == \"option\" && arguments.length == 2 && typeof arguments[1] == \"string\") {\n      return $.selectbox[\"_\" + options + \"Selectbox\"].apply($.selectbox, [this[0]].concat(otherArgs))\n    }\n    return this.each(function() {\n      typeof options == \"string\" ? $.selectbox[\"_\" + options + \"Selectbox\"].apply($.selectbox, [this].concat(otherArgs)) : $.selectbox._attachSelectbox(this, options)\n    })\n  };\n  $.selectbox = new Selectbox();\n  $.selectbox.version = \"0.2\"\n})(jQuery);"],"sourceRoot":"/source/"}